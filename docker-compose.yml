version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: news-articles
    volumes:
      - mongodb_data:/data/db
    networks:
      - kafka-news-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka Broker
  kafka:
    image: bitnami/kafka:3.7
    container_name: broker
    hostname: broker
    networks:
      - kafka-news-network
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 10

  # Publisher Service
  publisher:
    build:
      context: ./publisher
      dockerfile: Dockerfile
    container_name: publisher-container
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-news-network
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Interesting Subscriber Service
  interesting-subscriber:
    build:
      context: ./interesting_subscriber
      dockerfile: Dockerfile
    container_name: interesting-subscriber-container
    restart: unless-stopped
    ports:
      - "8001:8001"
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - kafka-news-network
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MONGO_DATABASE=news-articles
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 25s
      retries: 3

  # Not Interesting Subscriber Service
  not-interesting-subscriber:
    build:
      context: ./not_interesting_subscriber
      dockerfile: Dockerfile
    container_name: not-interesting-subscriber-container
    restart: unless-stopped
    ports:
      - "8002:8002"
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - kafka-news-network
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MONGO_DATABASE=news-articles
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 25s
      retries: 3

networks:
  kafka-news-network:
    driver: bridge

volumes:
  kafka_data:
    driver: local
  mongodb_data:
    driver: local